---
version: 2

jobs:
  archive2:
    working_directory: '/rpmbuild/hootenanny'
    docker:
      - image: hootenanny/rpmbuild-hoot-release@sha256:d41955e2b2b7bff973a23f289e373fb2c8117339b97fbefe2244c9e295b93f10
        environment:
          CCACHE_SLOPPINESS: 'time_macros'
          DB_NAME: 'hoot'
          DB_NAME_OSMAPI: 'osmapi_test'
          DB_USER: 'hoot'
          DB_USER_OSMAPI: 'hoot'
          DB_PASSWORD: 'hoottest'
          DB_PASSWORD_OSMAPI: 'hoottest'
          DB_HOST: 'localhost'
          DB_HOST_OSMAPI: 'localhost'
          DB_PORT: '5432'
          DB_PORT_OSMAPI: '5432'
          HOOT_HOME: '/rpmbuild/hootenanny'
          GDAL_DATA: '/usr/share/gdal'
          LD_LIBRARY_PATH: '/rpmbuild/hootenanny/lib'
          PATH: '/rpmbuild/hootenanny/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
          QT_SELECT: '4'
          WFS_DB_NAME: 'wfsstoredb'
    steps:
      - checkout
      - run:
          name: 'Git Submodules'
          command: |
            chown -R rpmbuild:rpmbuild .
            su-exec rpmbuild git submodule update --init --recursive
      - run:
          name: 'Download and Extract Maven Cache'
          command: |
            if [ ! -d /rpmbuild/.m2/repository ]; then
              su-exec rpmbuild bash -c "mkdir -p /rpmbuild/.m2 && curl -sSL https://s3.amazonaws.com/hoot-maven/m2-cache.tar.gz | tar -C /rpmbuild/.m2 -xzf -"
            fi
      - run:
          name: 'Generate Autotools Configure Script'
          command: |
            su-exec rpmbuild bash -c "aclocal && autoconf && autoheader && automake --add-missing --copy"
      - run:
          name: 'Run Configure Script'
          command: |
            su-exec rpmbuild ./configure --quiet --with-rnd --with-services --with-postgresql
      - run:
          name: 'Make the Archive'
          command: |
            su-exec postgres pg_ctl -D $PGDATA -s start
            su-exec rpmbuild bash -c "make -j$(nproc) clean && make -j$(nproc) archive"

  archive:
    working_directory: '/rpmbuild/hootenanny'
    docker:
      - image: hootenanny/rpmbuild-hoot-release@sha256:d41955e2b2b7bff973a23f289e373fb2c8117339b97fbefe2244c9e295b93f10
    steps:
      - checkout
      - run:
          name: 'Git Submodules'
          command: |
            chown -R rpmbuild:rpmbuild .
            su-exec rpmbuild git submodule update --init --recursive
      - run:
          name: 'Download and Extract Maven Cache'
          command: |
            if [ ! -d /rpmbuild/.m2/repository ]; then
              su-exec rpmbuild bash -c "mkdir -p /rpmbuild/.m2 && curl -sSL https://s3.amazonaws.com/hoot-maven/m2-cache.tar.gz | tar -C /rpmbuild/.m2 -xzf -"
            fi
      - run:
          name: 'Create Archive'
          command: |
            su-exec postgres pg_ctl -D $PGDATA -s start
            su-exec rpmbuild ./scripts/ci/archive.sh
            mkdir -p /tmp/archive
            mv -v hootenanny-[0-9]*.tar.gz /tmp/archive
      - store_artifacts:
          path: /tmp/archive
          destination: archives
  copyright:
    working_directory: '/rpmbuild/hootenanny'
    docker:
      - image: hootenanny/rpmbuild-generic@sha256:1a90408da44fc3577634210f3a93ac6d80ad7330e7f7eee1d51b1544f0d835c7
        user: rpmbuild
        environment:
          HOOT_HOME: '/rpmbuild/hootenanny'
    steps:
      - checkout
      - run:
          name: 'Check Copyright Headers'
          command: ./scripts/copyright/UpdateAllCopyrightHeaders.sh

workflows:
  version: 2
  archive-copyright:
    jobs:
      - archive2
#      - archive
#      - copyright
